-- SQL Project End to End by WS Cubetech --

-- CREATE DATABASE PIZZAS;
-- CREATE TABLE ORDERS
-- (
-- ORDER_ID INT NOT NULL,
-- ORDER_DATE DATE NOT NULL,
-- ORDER_TIME TIME NOT NULL,
-- PRIMARY KEY (ORDER_ID)
-- );

-- CREATE TABLE ORDERS_DETAILS 
-- (
-- ORDER_DETAILS_ID INT NOT NULL,
-- ORDER_ID INT NOT NULL,
-- PIZZA_ID TEXT NOT NULL,
-- QUANTITY INT NOT NULL,
-- PRIMARY KEY (ORDER_DETAILS_ID)
-- );


#Basic Top 5 Queries : 

-- 1) RETRIEVE THE TOTAL NUMBERS OF ORDER PLACES?

SELECT COUNT(ORDER_ID) 
AS TOTAL_ORDERS 
FROM ORDERS;




-- 2) Calculate the total revenue generated from pizza sales?

SELECT ROUND(SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE), 0) 
AS TOTAL_PROFIT
FROM ORDER_DETAILS JOIN PIZZAS
ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID;





-- 3) Identify the highest-priced pizza?

SELECT PIZZA_TYPES.NAME, PIZZAS.PRICE
FROM PIZZA_TYPES JOIN PIZZAS 
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
ORDER BY PIZZAS.PRICE DESC
LIMIT 1;




-- 4) Identify the most common pizza size ordered?

SELECT PIZZAS.SIZE, COUNT(ORDER_DETAILS.ORDER_DETAILS_ID) 
AS COUNT_ORDER
FROM PIZZAS JOIN ORDER_DETAILS
ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
GROUP BY PIZZAS.SIZE 
ORDER BY COUNT_ORDER DESC
LIMIT 1;





-- 5) List the top 5 most ordered pizza types along with their quantities?

SELECT PIZZA_TYPES.NAME,
COUNT(ORDER_DETAILS.QUANTITY) AS ORDER_QUA
FROM PIZZA_TYPES JOIN PIZZAS
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
JOIN ORDER_DETAILS
ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY PIZZA_TYPES.NAME 
ORDER BY ORDER_QUA DESC
LIMIT 5;





#Intermediate Top 5 Queries :

-- 1) Join the necessary tables to find the total quantity of each pizza category ordered

SELECT PIZZA_TYPES.CATEGORY,
COUNT(ORDER_DETAILS.QUANTITY) AS ORDER_QUA
FROM PIZZA_TYPES JOIN PIZZAS
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
JOIN ORDER_DETAILS
ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY PIZZA_TYPES.CATEGORY 
ORDER BY ORDER_QUA DESC;





-- 2) Determine the distribution of orders by hour of the day?

SELECT HOUR(ORDER_TIME) AS ORDER_HRS, 
COUNT(ORDER_ID) AS ORDER_COUNTS 
FROM ORDERS
GROUP BY HOUR(ORDER_TIME);




-- 3) Join relevant tables to find the category-wise distribution of pizzas?

SELECT PIZZA_TYPES.CATEGORY, 
COUNT(PIZZA_TYPES.NAME) AS PIZZA_TYPES
FROM PIZZA_TYPES
GROUP BY PIZZA_TYPES.CATEGORY;




-- 4) Group the orders by date and calculate the average number of pizzas ordered per day?

SELECT ROUND(AVG(QUANTITY), 0) AS AVG_ORD_PLACED FROM
(SELECT ORDERS.ORDER_DATE, SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY
FROM ORDERS JOIN ORDER_DETAILS 
ON ORDERS.ORDER_ID = ORDER_DETAILS.ORDER_ID
GROUP BY ORDERS.ORDER_DATE) 
AS ORDER_QUANTITY;





-- 5) Determine the top 3 most ordered pizza types based on revenue?

SELECT PIZZA_TYPES.NAME	,
SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) AS REVENUE
FROM PIZZA_TYPES JOIN PIZZAS
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
JOIN ORDER_DETAILS
ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY PIZZA_TYPES.NAME 
ORDER BY REVENUE DESC
LIMIT 3;






#Advances Top 3 Queries : 

-- 1) Calculate the percentage contribution of each pizza type to total revenue?


SELECT PIZZA_TYPES.CATEGORY, 
ROUND(SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) /
(SELECT ROUND(SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE), 2) AS TOTAL_SALES
FROM ORDER_DETAILS JOIN PIZZAS
ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID) *100,2) AS REVENUE
FROM PIZZA_TYPES JOIN PIZZAS
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
JOIN ORDER_DETAILS
ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY PIZZA_TYPES.CATEGORY 
ORDER BY REVENUE DESC;




-- 2) Analyze the cumulative revenue generated over time?
	
SELECT ORDER_DATE, SUM(REVENUE) 
OVER(ORDER BY ORDER_DATE) AS CUMM_REVENU
FROM    
(SELECT ORDERS.ORDER_DATE,
SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) AS REVENUE
FROM ORDER_DETAILS JOIN PIZZAS
ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
JOIN ORDERS
ON ORDERS.ORDER_ID = ORDER_DETAILS.ORDER_ID 
GROUP BY ORDERS.ORDER_DATE) AS SALES;





-- 3) Determine the top 3 most ordered pizza types based on revenue for each pizza category?

SELECT NAME, REVENUE FROM 
(SELECT CATEGORY, NAME, REVENUE, 
RANK() OVER(PARTITION BY CATEGORY ORDER BY REVENUE DESC) 
AS RANK_REV
FROM
(SELECT PIZZA_TYPES.CATEGORY, PIZZA_TYPES.NAME,
SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) AS REVENUE
FROM PIZZA_TYPES JOIN PIZZAS
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
JOIN ORDER_DETAILS
ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY PIZZA_TYPES.CATEGORY, PIZZA_TYPES.NAME) AS A) C
WHERE RANK_REV >= 3;

	









